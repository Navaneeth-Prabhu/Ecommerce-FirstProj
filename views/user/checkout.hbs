

      <div class="container">
        <!-- HERO SECTION-->
        <section class="py-5 bg-light">
          <div class="container">
            <div class="row px-4 px-lg-5 py-lg-4 align-items-center">
              <div class="col-lg-6">
                <h1 class="h2 text-uppercase mb-0">Checkout</h1>
              </div>
              <div class="col-lg-6 text-lg-end">
                <nav aria-label="breadcrumb">
                  <ol class="breadcrumb justify-content-lg-end mb-0 px-0 bg-light">
                    <li class="breadcrumb-item"><a class="text-dark" href="index.html">Home</a></li>
                    <li class="breadcrumb-item"><a class="text-dark" href="/cart">Cart</a></li>
                    <li class="breadcrumb-item active" aria-current="page">Checkout</li>
                  </ol>
                </nav>
              </div>
            </div>
          </div>
        </section>
        <section class="py-5">
          <!-- BILLING ADDRESS-->
          <h2 class="h5 text-uppercase mb-4">Billing details</h2>
          <div class="row">
            <div class="col-lg-8">
              <form action="/checkout/?id={{user._id}}" method="post" id="checkout" name="checkout">
                <div class="row gy-3">
                  <div class="col-lg-6">
                    {{!-- <input class="form-control form-control-lg" type="number" id="totalPrice" name="totalPrice" value="{{total}}" > --}}
                    {{!-- <input class="form-control form-control-lg" type="number" id="offerp" name="offerp" value="{{total}}" > --}}
                    <input class="form-control form-control-lg" type="text" id="couponId" name="couponId" hidden>
                    <label class="form-label text-sm text-uppercase" for="firstName">First name </label>
                    <input class="form-control form-control-lg" type="text" id="name" name="name" value="{{user.Name}}">
                  </div>




       
                  <div class="col-lg-6">
                    <label class="form-label text-sm text-uppercase" for="address">Address</label>
                    <input class="form-control form-control-lg" type="text" id="addresss" name="address" value="" required>
                  </div>
                  <div class="col-lg-6">
                    <label class="form-label text-sm text-uppercase" for="city">city</label>
                    <input class="form-control form-control-lg" type="text" id="citys" name="city" value="" required>
                  </div>
                  <div class="col-lg-6">
                    <label class="form-label text-sm text-uppercase" for="state">State</label>
                    <input class="form-control form-control-lg" type="text" id="states" name="state" value="" required>
                  </div>
                  <div class="col-lg-6">
                    <label class="form-label text-sm text-uppercase" for="pin">pin</label>
                    <input class="form-control form-control-lg" type="number" id="pins" name="pin" value="" required>
                  </div>
                  {{!-- <div class="col-lg-6">
                    <label class="form-label text-sm text-uppercase" for="company">Company name (optional) </label>
                    <input class="form-control form-control-lg" type="text" id="company" placeholder="Your company name">
                  </div> --}}

                  <input type="text" name="userId" id="" value="{{user._id}}" hidden>
                  <div class="col-lg-6 form-group">
                    <label class="form-label text-sm text-uppercase" for="country">Country</label>
                    <select class="country" id="country" data-customclass="form-control form-control-lg rounded-0">
                      <option value>India</option>
                    </select>
                  </div>


                    <H5>ADDRESS</H5>
                  {{#each address}}
                    <label for="address" id="addressLabel" class=" radio-inline">
                    <input type="radio" name="address" value="{{this.address}},{{this.city}},{{this.state}},{{this.pin}}" id="address_id"  onclick="addtoplace( `{{this.address}}`,`{{this.city}}`,`{{this.state}}`,`{{this.pin}}`)" required>
                    {{this.address}},{{this.city}}
                    <input type="text" name="address_id" id="address_id" value="{{this._id}}" hidden>
                    {{!-- <input type="text" name="" id="" value="{{this.address}},{{this.city}},{{this.state}},{{this.pin}}"  /> --}}
                  </label>
                  {{/each}}
                    <a class="btn btn-primary col-3" href="/add-address?userId={{user._id}}">Add New Address</a>
                


                  <h5>PAYMENT METHOD</h5>
                  {{#if gwallet}}
                  <label for="" class=" radio-inline">
                    <input type="radio" name="payment-method" value="Wallet" onclick="toggle()" required>Wallet
                  </label>
                  {{else}}
                  <label for="" class=" radio-inline">
                    <input type="radio" name="payment-method" value="Wallet" onclick="toggle()" disabled>Wallet
                    <span class="small">   oops !! you dont have enough money in wallet</span>
                  </label>
                  {{/if}}
                  <label for="" class=" radio-inline">
                    <input type="radio" name="payment-method" value="COD" onclick="toggle()" required>COD
                  </label>
                  <label for="" class="radio-inline">
                    <input type="radio" name="payment-method" value="razorpay" onclick="toggle()" required>RazorPay
                  </label>
                  <label for="" class="radio-inline">
                    <input type="radio" name="payment-method" value="paypal" onclick="toggle1()" required >PayPal
                  </label>
        
                  <div class="col-lg-12 form-group">
                     <div class="btn clr" id="paypal-button-container"></div>
                    <button class="btn btn-dark clr" type="submit" id="co">Place order</button>
                  </div>
                </div>

              </form>
            </div>

            <!-- ORDER SUMMARY-->
            <div class="col-lg-4">
              <div class="card border-0 rounded-0 p-lg-4 bg-light">
                <div class="card-body">
                  <h5 class="text-uppercase mb-4">Your order</h5>
                  <ul class="list-unstyled mb-0">
                    {{!-- <li class="d-flex align-items-center justify-content-between"><strong class="small fw-bold"></strong><span class="text-muted small">$250</span></li> --}}
                    <li class="border-bottom my-2"></li>
                    {{!-- <li class="d-flex align-items-center justify-content-between"><strong class="small fw-bold"></strong><span class="text-muted small">$351</span></li> --}}
                    {{!-- <li class="border-bottom my-2"></li> --}}
                    <li class="d-flex align-items-center justify-content-between"><strong class="text-uppercase small fw-bold">Total</strong><span id="orginal">{{total}}</span></li><br>
                    <li class="d-flex align-items-center justify-content-between d-none d-print-block"><strong class="text-uppercase small fw-bold">Total</strong><span id="off">{{total}}</span></li ><br>

                    <li class="d-flex align-items-center justify-content-between"  ><strong class="text-uppercase small fw-bold" id="couponHide" ></strong><span id="couponAdd"></span></li>
                    <li class="d-flex align-items-center justify-content-between"><strong class="text-uppercase small fw-bold">Offer</strong><span id="total">{{total}}</span></li>
                     
                    <li>

                    </li>
                    <li>
                      {{!-- <form action="/verifyCoupon" method="post"> --}}
                       <div class="input-group">
                        <div class="input-group mb-0">
                          <input class="form-control" type="text" placeholder="Enter your coupon" name="coupon" id="applycoup" value="helo">
                          <p id="msg" class="text-danger"></p>
                          <button class="btn btn-dark btn-sm w-100" type="submit" id="applyButton" onclick="addcoupon()"> Apply coupon</button>
                        </div>
                       </div>
                      {{!-- </form> --}}
                      {{!-- <div class="input-group">
                        <input type="text" class="form-control" placeholder="Promo code" name="coupon" id="applycoup">
                        <div class="input-group-append">
                            <button type="submit" class="btn btn-secondary" onclick="addcoupon()">Redeem</button>
                            <p id="msg" style="color:rgb(255, 0, 0) "></p>
                        </div>
                      </div> --}}
                    </li>
                  </ul>
                </div>
              </div>
            </div>
          </div>

        </section>
      
      
      <script>
        // ------------------------------------------------------- //
        //   Inject SVG Sprite - 
        //   see more here 
        //   https://css-tricks.com/ajaxing-svg-sprite/
        // ------------------------------------------------------ //
        function injectSvgSprite(path) {
        
            var ajax = new XMLHttpRequest();
            ajax.open("GET", path, true);
            ajax.send();
            ajax.onload = function(e) {
            var div = document.createElement("div");
            div.className = 'd-none';
            div.innerHTML = ajax.responseText;
            document.body.insertBefore(div, document.body.childNodes[0]);
            }
        }
        // this is set to BootstrapTemple website as you cannot 
        // inject local SVG sprite (using only 'icons/orion-svg-sprite.svg' path)
        // while using file:// protocol
        // pls don't forget to change to your domain :)
        injectSvgSprite('https://bootstraptemple.com/files/icons/orion-svg-sprite.svg'); 
        
      </script>
      <!-- FontAwesome CSS - loading as last, so it doesn't block rendering-->
      <link rel="stylesheet" href="https://use.fontawesome.com/releases/v5.7.1/css/all.css" integrity="sha384-fnmOCqbTlWIlj8LyTjo7mOUStjsKC4pOpQbqyi7RrhN7udi9RwhKkMHpvLbHG9Sr" crossorigin="anonymous">
    


<style>
  .clr {
    display: none !important;
  }
  .sft {
   display: block !important;
  }
</style>


<script>
  $("#checkout").submit((e)=>{
    e.preventDefault()
    $.ajax({
      url:'/checkout',
      method:'post',
      data:$('#checkout').serialize(),
      success:(response)=>{ 
        if(response.cod_success)
        {
          
          location.href='/orderSucessfull'
          
        } else if(response.wallet_success == true) {
         
          location.href = '/orderSucessfull'
        }
        else if(response.wallet_fail) {
          location.href = '/orderSucessfull'
            
        }
        else if(response) {
          razorPayment(response)
        }
        else{
        location.href = '/orderSucessfull'

        }    
        }
    })
  })

  function razorPayment(order) {
    
    var options = {
        "key": "rzp_test_t1yn2Ez97FhcF6", // Enter the Key ID generated from the Dashboard
        "amount": order.amount, // Amount is in currency subunits. Default currency is INR. Hence, 50000 refers to 50000 paise
        "currency": "INR",
        "name": "WATCH",
        "description": "Test Transaction",
        "image": "/images/resize-1661314920805561225Group1.jpg",
        "order_id":order.id, //This is a sample Order ID. Pass the `id` obtained in the response of Step 1
        "handler": function (response){
             
            
            verifyPayment(response,order)
        },
        "prefill": {
            "name": "xxxx",
            "email": "xxxxx@gmail.com",
            "contact": "9999999999"
        },
        "notes": {
            "address": "Razorpay Corporate Office"
        },
        "theme": {
            "color": "#F37254"
        }
    };

    var rzp1 = new Razorpay(options);
    rzp1.open();

}
function verifyPayment(payment,order){
   console.log("in verifyPayment");
    $.ajax({
        url:'/verify-payment',
        data:{
        payment,
        order
    },
    method:'post',
    success:((response) =>{
      console.log("",response)
        if(response.status){
            location.href='/orderSucessfull'
        }else{
          alert('payment failed')
        }
      })
    })
}

paypal
  .Buttons({
    // Sets up the transaction when a payment button is clicked
    createOrder: async function (data, actions) {
      return fetch("/api/orders", {
        method: "post",
      })
        .then((response) => response.json())
        .then((response) => {
          console.log(response);
          return response.id;
        });
    },

    // Finalize the transaction after payer approval
    onApprove:async  function (data, actions) {
      return fetch(`/api/orders/${data.orderID}/capture`, {
        method: "post",
      })
        .then((response) => response.json())
        .then(function (orderData) {
          // Successful capture! For dev/demo purposes:
          console.log(
            "Capture result",
            orderData,
            JSON.stringify(orderData, null, 2)
          );
          var transaction = orderData.purchase_units[0].payments.captures[0];

          $( "#co" ).trigger( "click" );
          // When ready to go live, remove the alert and show a success message within this page. For example:
          // var element = document.getElementById('paypal-button-container');
          // element.innerHTML = '';
          // element.innerHTML = '<h3>Thank you for your payment!</h3>';
          // Or go to another URL:  actions.redirect('thank_you.html');
          
        });

    },
  })
  .render("#paypal-button-container");
 

  </script>

<script type = "text/javascript">
  function toggle() {
    const list = document.getElementById("co").classList;
    const list2 = document.getElementById("paypal-button-container").classList;
    list.add("sft");
    list2.remove("sft");
  
  }
   function toggle1() {
      const list = document.getElementById("co").classList;
    const list2 = document.getElementById("paypal-button-container").classList;
    list2.add("sft");
    list.remove("sft");
  }

  function addtoplace(address,city,state,pin){
    console.log('hello im here')
    let add = document.getElementById('addresss').value = address
    let cityname = document.getElementById('citys').value = city
    let statename = document.getElementById('states').value = state
    let pinname = document.getElementById('pins').value = pin

  }

  function addcoupon() {
               console.log("in add coup")
                let sum = document.getElementById('total').innerHTML
                let orginal = document.getElementById('orginal').innerHTML
                let coupId= document.getElementById("couponId")
                 let coupon = document.getElementById('couponvalue')
                let couponname = document.getElementById('applycoup').value   
                  let couponusing = document.getElementById('couponusing')
              let coupAdd = document.getElementById('couponAdd')
              let coupHide = document.getElementById('couponHide')
      
          
                $.ajax({
                    url: '/applyCoupon',
                    method: 'post',
                    data: { promo: couponname },

                    success: (response) => {
                        console.log(response);
                  
                        if (response.status==false) {
                         
                            let error = document.getElementById('msg')
                            error.innerHTML = 'Enter valid Promocode'
                        } else {

                          document.getElementById('msg').style.display='none'
                            Swal.fire({
                                position: 'top-end',
                                icon: 'success',
                                title: 'COUPON APPLIED',
                                showConfirmButton: false,
                                timer: 1500
                            })
                            
                            coupHide.innerHTML = 'Coupon'
                            coupAdd.innerHTML ='-'+ Number(response.coupon.off)+'%'
                            if( Number(orginal)-(Number(orginal)*(Number(response.coupon.off)/100)) > Number(response.coupon.CapAmount))
                            {
                              document.getElementById('total').innerHTML =  Number(orginal)-Number(response.coupon.CapAmount);
                              let input= document.getElementById('offerp')
                              input.value =  Number(orginal)-1000;
                              coupId.value=response.coupon._id

                      
                      

                            }else{
                              document.getElementById('total').innerHTML =  Number(orginal)-(Number(orginal)*(Number(response.coupon.off)/100));
                              let input= document.getElementById('offerp')
                              input.value = Number(orginal)-(Number(orginal)*(Number(response.coupon.off)/100));
                              coupId.value=response.coupon._id
                     

                            }
                                             
                        }
                    }
                })
            }
</script>
